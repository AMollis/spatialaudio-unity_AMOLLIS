# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License.

jobs:
- deployment: Publish
  condition: and(succeeded(), eq(variables['Build.SourceBranchName'], variables['SigningBranch']))
  continueOnError: false
  displayName: Publish Packages to Feeds
  pool:
    name: Package ES Lab E
  environment: 'SpatialAudio-Unity Release Approval'
  strategy:
    runOnce:
      deploy:
        steps:
        - script: echo Syncing Source
        - checkout: self
          submodules: true
        - task: CmdLine@2
          displayName: Copy .npmrc for Public Feed
          inputs:
            script: copy $(Build.SourcesDirectory)\Tools\PublicFeed.npmrc $(Build.SourcesDirectory)\Source\Plugins\IsacPluginGenerator\Assets\Microsoft.SpatialAudio.Spatializer.Unity\.npmrc
        - task: npmAuthenticate@0
          displayName: Public NPM Feed Authentication
          inputs:
            workingFile: Source\Plugins\IsacPluginGenerator\Assets\Microsoft.SpatialAudio.Spatializer.Unity\.npmrc
            customEndpoint: 'aipmr MixedReality-Unity-Packages'
        - script: python tools\upm_package.py -s $(Pipeline.Workspace)\BuildArtifacts -o $(Pipeline.Workspace)\npm -v $(ProductVersion) -p
          displayName: Publish NPM Package to Public UPM Feed

        - script: echo Downloading Nuget Artifacts
        - task: DownloadPipelineArtifact@2
          inputs:
            artifactName: 'NugetPackage'
            buildType: 'current'
            targetPath: '$(Pipeline.Workspace)\nuget'
        - task: EsrpCodeSigning@1
          displayName: 'CodeSign NuGet Package - ''SigningBranch'' only'
          condition: and(succeeded(), eq(variables['Build.SourceBranchName'], variables['SigningBranch']))
          env:
            SYSTEM_ACCESSTOKEN: $(System.AccessToken)
          inputs:
            ConnectedServiceName: $(ESRPConnection)
            FolderPath: '$(Pipeline.Workspace)\nuget'
            Pattern: 'Microsoft.SpatialAudio.*.nupkg'
            SessionTimeout: 360
            MaxConcurrency: 5
            MaxRetryAttempts: 5
            signConfigType: inlineSignParams
            inlineOperation: |
              [
                {
                  "KeyCode" : "CP-230012",
                  "OperationCode" : "SigntoolSign",
                  "Parameters" : {
                    "OpusName" : "Microsoft",
                    "OpusInfo" : "http://www.microsoft.com",
                    "FileDigest" : "/fd \"SHA256\"",
                    "PageHash" : "/NPH",
                    "TimeStamp" : "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
                  },
                  "ToolName" : "sign",
                  "ToolVersion" : "1.0"
                },
                {
                  "KeyCode" : "CP-230012",
                  "OperationCode" : "SigntoolVerify",
                  "Parameters" : {},
                  "ToolName" : "sign",
                  "ToolVersion" : "1.0"
                }
              ]
        - task: 333b11bd-d341-40d9-afcf-b32d5ce6f23b@2
          displayName: 'Push to Nuget.org'
          condition: and(succeeded(), eq(variables['Build.SourceBranchName'], variables['SigningBranch']))
          inputs:
            command: 'push'
            packagesToPush: '$(Pipeline.Workspace)/nuget/**/*.nupkg'
            nuGetFeedType: 'external'
            publishFeedCredentials: '$(NugetFeedId)'

