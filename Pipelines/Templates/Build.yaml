# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License.

jobs:
- job: Windows_x64_Desktop
  continueOnError: false
  pool:
    vmImage: 'windows-2019'
    Demands:
    - msbuild
    - visualstudio

  steps:
  - script: echo Building Windows x64 Desktop
  - checkout: self
    submodules: true
  - script: 'echo git submodule update --init --recursive'
    displayName: 'Update Submodules'
  - template: DownloadPackage.yaml
  - script: python tools\runcmake.py --windows --version $(ProductVersion)
    displayName: 'Run CMake'
    env:
      AZURE_DEVOPS_EXT_PAT: $(System.AccessToken)
  - script: python tools\build.py --platform Windows --arch x64 --config 'RelWithDebInfo' --clean
  - task: CopyFiles@2
    inputs:
      SourceFolder: 'build\windows\x64\bin\RelWithDebInfo'
      Contents: '**'
      TargetFolder: '$(Build.ArtifactStagingDirectory)\$(Agent.JobName)'
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: $(Agent.JobName)
      publishLocation: 'Container'

- job: Windows_x86_Desktop
  continueOnError: false
  pool:
    vmImage: 'windows-2019'
    Demands:
      - msbuild
      - visualstudio
  steps:
  - script: echo Building Windows x86 Desktop
  - checkout: self
    submodules: true
  - script: 'echo git submodule update --init --recursive'
    displayName: 'Update Submodules'
  - template: DownloadPackage.yaml
  - script: python tools\runcmake.py --windows --version $(ProductVersion)
    env:
      AZURE_DEVOPS_EXT_PAT: $(System.AccessToken)
    displayName: 'Run CMake'
  - script: python tools\build.py --platform Windows --arch Win32 --config 'RelWithDebInfo' --clean
  - task: CopyFiles@2
    inputs:
      SourceFolder: 'build\windows\Win32\bin\RelWithDebInfo'
      Contents: '**'
      TargetFolder: '$(Build.ArtifactStagingDirectory)\$(Agent.JobName)'
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: $(Agent.JobName)
      publishLocation: 'Container'

- job: Windows_x64_UWP
  continueOnError: false
  pool:
    vmImage: 'windows-2019'
    Demands:
      - msbuild
      - visualstudio
  steps:
  - script: echo Building Windows x64 UWP
  - checkout: self
    submodules: true
  - script: 'echo git submodule update --init --recursive'
    displayName: 'Update Submodules'
  - template: DownloadPackage.yaml
  - script: python tools\runcmake.py --windowsstore --version $(ProductVersion)
    displayName: 'Run CMake'
    env:
      AZURE_DEVOPS_EXT_PAT: $(System.AccessToken)
  - script: python tools\build.py --platform WindowsStore --arch x64 --config 'RelWithDebInfo' --clean
  - task: CopyFiles@2
    inputs:
      SourceFolder: 'build\WindowsStore\x64\bin\RelWithDebInfo'
      Contents: '**'
      TargetFolder: '$(Build.ArtifactStagingDirectory)\$(Agent.JobName)'
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: $(Agent.JobName)
      publishLocation: 'Container'

- job: Windows_x86_UWP
  continueOnError: false
  pool:
    vmImage: 'windows-2019'
    Demands:
      - msbuild
      - visualstudio
  steps:
  - script: echo Building Windows x86 UWP
  - checkout: self
    submodules: true
  - script: 'echo git submodule update --init --recursive'
    displayName: 'Update Submodules'
  - template: DownloadPackage.yaml
  - script: python tools\runcmake.py --windowsstore --version $(ProductVersion)
    displayName: 'Run CMake'
    env:
      AZURE_DEVOPS_EXT_PAT: $(System.AccessToken)
  - script: python tools\build.py --platform WindowsStore --arch Win32 --config 'RelWithDebInfo' --clean
  - task: CopyFiles@2
    inputs:
      SourceFolder: 'build\WindowsStore\Win32\bin\RelWithDebInfo'
      Contents: '**'
      TargetFolder: '$(Build.ArtifactStagingDirectory)\$(Agent.JobName)'
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: $(Agent.JobName)
      publishLocation: 'Container'

- job: Windows_ARM_UWP
  continueOnError: false
  pool:
    vmImage: 'windows-2019'
    Demands:
      - msbuild
      - visualstudio
  steps:
  - script: echo Building Windows ARM UWP
  - checkout: self
    submodules: true
  - script: 'echo git submodule update --init --recursive'
    displayName: 'Update Submodules'
  - template: DownloadPackage.yaml
  - script: python tools\runcmake.py --windowsstore --version $(ProductVersion)
    displayName: 'Run CMake'
    env:
      AZURE_DEVOPS_EXT_PAT: $(System.AccessToken)
  - script: python tools\build.py --platform WindowsStore --arch ARM --config 'RelWithDebInfo' --clean
  - task: CopyFiles@2
    inputs:
      SourceFolder: 'build\WindowsStore\ARM\bin\RelWithDebInfo'
      Contents: '**'
      TargetFolder: '$(Build.ArtifactStagingDirectory)\$(Agent.JobName)'
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: $(Agent.JobName)
      publishLocation: 'Container'

- job: Windows_ARM64_UWP
  continueOnError: false
  pool:
    vmImage: 'windows-2019'
    Demands:
      - msbuild
      - visualstudio
  steps:
  - script: echo Building Windows ARM64 UWP
  - checkout: self
    submodules: true
  - script: 'echo git submodule update --init --recursive'
    displayName: 'Update Submodules'
  - template: DownloadPackage.yaml
  - script: python tools\runcmake.py --windowsstore --version $(ProductVersion)
    displayName: 'Run CMake'
    env:
      AZURE_DEVOPS_EXT_PAT: $(System.AccessToken)
  - script: python tools\build.py --platform WindowsStore --arch ARM64 --config 'RelWithDebInfo' --clean
  - task: CopyFiles@2
    inputs:
      SourceFolder: 'build\WindowsStore\ARM64\bin\RelWithDebInfo'
      Contents: '**'
      TargetFolder: '$(Build.ArtifactStagingDirectory)\$(Agent.JobName)'
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: $(Agent.JobName)
      publishLocation: 'Container'